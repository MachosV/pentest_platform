from django.views.generic.edit import CreateView
from django.shortcuts import redirect
from django.contrib import messages
from django import forms
from daedalus.models import Assignment
from daedalus.models import PentesterProfile
from django.core.urlresolvers import reverse


class AssignmentForm(forms.ModelForm):
    class Meta:
        model = Assignment
        fields = [
            'name',
            'testers',
        ]

    def __init__(self, *args, **kwargs):
        user = kwargs.pop('user')
        super(AssignmentForm, self).__init__(*args, **kwargs)
        self.fields['testers'].queryset = PentesterProfile.objects.filter(manager=user)

class CreateAssignment(CreateView):
    model = Assignment
    template_name = 'createAssignment.html'
    form_class = AssignmentForm

    def get_form_kwargs(self):
        kwargs = super(CreateAssignment, self).get_form_kwargs()
        kwargs['user'] = self.request.user.managerprofile
        return kwargs

    def form_invalid(self, form):
        messages.error(self.request,'Invalid form')
        return redirect('CreateAssignment')

    def form_valid(self, form):
        form.instance.manager = self.request.user.managerprofile
        self.object = form.save()
        return redirect(reverse('AssignmentDetail',kwargs = {'name':form.instance.name}))